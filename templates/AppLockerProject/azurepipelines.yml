trigger:
  branches:
    include:
      - main

stages:
  - stage: build
    jobs:
      - job: Build
        displayName: "Build AppLocker Artifacts"
        pool:
          name: Default
        workspace:
          clean: all
        steps:
          - task: PowerShell@2
            name: prereq
            displayName: "Download prerequisites"
            inputs:
              filePath: '.\build\prerequisites.ps1'
          - task: PowerShell@2
            name: validateyaml
            displayName: Validate Configuration Data
            inputs:
              filePath: '.\build\validate.ps1'
              arguments: "-TestType ConfigurationData"
          - task: PowerShell@2
            name: buildpolicy
            displayName: Build policy XML
            inputs:
              filePath: '.\build\build.ps1'
              arguments: "-IncludeRsop"
          - task: PublishBuildArtifacts@1
            displayName: "Publish Policy XML Files"
            inputs:
              PathtoPublish: "output/Policies"
              ArtifactName: Policies
          - task: PublishBuildArtifacts@1
            displayName: "Publish Policy RSOP Files"
            inputs:
              PathtoPublish: "output/Rsop"
              ArtifactName: Rsop
  - stage: publish
    dependsOn: build
    jobs:
      - deployment: Prod
        displayName: Prod Deployment
        environment: Prod
        pool:
          name: Default
        workspace:
          clean: all
        strategy:
          runOnce:
            deploy:
              steps:
                - download: None
                - task: DownloadBuildArtifacts@0
                  displayName: "Download Build Artifact: Rsop"
                  inputs:
                    buildType: "current"
                    artifactName: Rsop
                    downloadPath: $(Build.SourcesDirectory)
                - task: DownloadBuildArtifacts@0
                  displayName: "Download Build Artifact: Policies"
                  inputs:
                    buildType: "current"
                    artifactName: Policies
                    downloadPath: $(Build.SourcesDirectory)
                - task: PowerShell@2
                  name: publishpolicies
                  displayName: Publish policies
                  inputs:
                    filePath: '.\build\publish.ps1'
                    arguments: "-OutputPath $(Build.SourcesDirectory)"
                - task: PowerShell@2
                  name: validateintegration
                  displayName: Validate Integration
                  inputs:
                    filePath: '.\build\validate.ps1'
                    arguments: "-TestType Integration"
